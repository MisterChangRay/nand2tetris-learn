// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/11/Seven/Main.jack

/**
 * Computes the value of 1 + (2 * 3) and prints the result
 * at the top-left of the screen.  
 */
class Main {
 static Array bitmap;
   function void main() {
      var int i;

     let bitmap = Array.new(16);
        let bitmap[0] = 1;
		let bitmap[1] = 2;
		let bitmap[2] = 4;
		let bitmap[3] = 8;
		let bitmap[4] = 16;
		let bitmap[5] = 32;
		let bitmap[6] = 64;
		let bitmap[7] = 128;
		let bitmap[8] = 256;
		let bitmap[9] = 512;
		let bitmap[10] = 1024;
		let bitmap[11] = 2048;
		let bitmap[12] = 4096;
		let bitmap[13] = 8192;
		let bitmap[14] = 16384;
		let bitmap[15] = 16384 + 16384;

      //let i = Main.multiply(3,28);
      let i = Main.bitof(23, 3);
      do Output.printInt(i);
      return;
   }
   

    
    function int divide(int x, int y) {
        var int flag, res;
        let flag = 0;
        if(x < 0) {
            let x = -x;
            let flag = 1;
        }
        if(y < 0) {
            let y = -y;
            let flag = 1;
        }
        let res = Main.doDiv(x, y);
        if(flag = 0) {
            return res;
        }
        return -res;
    }
    
    function int doDiv(int x, int y) {
        var int q;
        var int tmp , tmp2;
        if(y > x) {
            return 0;
        }
        
        let tmp = Main.multiply(y, 2);
        let q = Main.divide(x, tmp);

        let tmp2 =  x - (tmp * q);
        if(tmp2  < y) {
            return Main.multiply(q, 2);
        } else {
            return Main.multiply(q, 2) + 1;
        }
    }


      function int multiply2(int x, int y) {
        var int xi, yi, res;
        let xi = 0;
        let yi = 0;
        let res = 0;


        while(xi < 16) {
               do Output.printInt(xi);
                  do Output.println();
            let yi = 0 ;
            while(yi < 16) {
                  do Output.printInt(yi);

               let res = res +1 ;
                let yi = yi + 1;
            }

            let xi = xi + 1;
        }
        return res;          

    }

    function int multiply(int x, int y) {
        var int xi, yi, xb, yb, tmp1, tmp2, res;
        let xi = 0;
        let yi = 0;
        let res = 0;

        while(xi < 16) {
            let xb = Main.bitof(x, xi);

            let tmp1 = 0;
            let yi = 0;
            while(yi < 16) {
                let yb = Main.bitof(y, yi);
                let tmp2 = xb + yb;

                if(tmp2 > 1) {
                     
                     let tmp2 = Main.shiftLeft(1, yi);

                     let tmp1 = tmp1 + tmp2;
                }
                let yi = yi + 1;
            }

            let tmp1 = Main.shiftLeft(tmp1, xi);
            let res = res + tmp1;
            let xi = xi + 1;
        }
        return res;          

    }

      function int bitof(int x, int index) {
        var int res;
        let res = bitmap[index];

        let res = x & res;
        if(res > 0) {
            return 1;
        } else {
            return 0;
        }
    }


    function int shiftLeft(int x, int shift) {
        while(shift > 0) {
            let shift = shift - 1;
            let x = x + x;
        }
        return x;
    }
}
