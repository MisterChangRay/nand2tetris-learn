// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/11/Seven/Main.jack

/**
 * Computes the value of 1 + (2 * 3) and prints the result
 * at the top-left of the screen.  
 */
class Main {

   function void main() {
      var int i;
      let i = Main.divide(18, 3);
      do Output.printInt(i);
      return;
   }
   

    function int divide(int x, int y) {
        var int q;
        var int tmp , tmp2;
        if(y > x) {
            return 0;
        }
        
        let tmp = Main.multiply(y, 2);
        let q = Main.divide(x, tmp);

        let tmp2 =  x - (tmp * q);
        if(tmp2  < y) {
            return Main.multiply(q, 2);
        } else {
            return Main.multiply(q, 2) + 1;
        }
    }


      function int multiply2(int x, int y) {
        var int xi, yi, res;
        let xi = 0;
        let yi = 0;
        let res = 0;


        while(xi < 16) {
               do Output.printInt(xi);
                  do Output.println();
            let yi = 0 ;
            while(yi < 16) {
                  do Output.printInt(yi);

               let res = res +1 ;
                let yi = yi + 1;
            }

            let xi = xi + 1;
        }
        return res;          

    }

    function int multiply(int x, int y) {
        var int xi, yi, xb, yb, tmp1, tmp2, res;
        let xi = 0;
        let yi = 0;
        let res = 0;

        while(xi < 16) {
            let xb = Main.bitof(x, xi);

            let tmp1 = 0;
            let yi = 0;
            while(yi < 16) {
                let yb = Main.bitof(y, yi);
                let tmp2 = xb + yb;

                if(tmp2 > 1) {
                     
                     let tmp2 = Main.shiftLeft(1, yi);

                     let tmp1 = tmp1 + tmp2;
                }
                let yi = yi + 1;
            }

            let tmp1 = Main.shiftLeft(tmp1, xi);
            let res = res + tmp1;
            let xi = xi + 1;
        }
        return res;          

    }

   function int bitof(int x, int index) {
       var int i;
       let i = 1;

       while(index > 0) {
            let index = index - 1;
            let i = i + i;
       }

        let index = x & i;
        if(index = i) {
            return 1;
        } else {
            return 0;
        }
    }

    function int shiftLeft(int x, int shift) {
        while(shift > 0) {
            let shift = shift - 1;
            let x = x + x;
        }
        return x;
    }
}
