// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:


    Not16(in=in, out=notIn);
    And16(a=in, b=notIn, out=setIn0);
    Mux16(a=in, b=setIn0, sel=reset, out=res0);

    Not(in=reset, out=reset0);
    And(a=load, b=reset0, out=isload);

    Mux16(a=res0, b=in, sel=isload, out=res1);

    
    Or(a=reset, b=load, out=load0);
    Not(in=load0, out=load0Out);
    And(a=load0Out, b=inc, out=inc0);
    Inc16(in=outFoIn, out=res2);
    Mux16(a=res1, b=res2, sel=inc0, out=res3);


    Or(a=load0, b=inc, out=load1);
    Mux16(a=outFoIn, b=res3, sel=load1, out=res4);



    Register(in=res4, load=load1,  out=out, out=outFoIn);

}
