// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {


    /** Initializes the library. */
    function void init() {
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if(x<0) {
           let  x = -x;
        }
        return x;
    }

    function int shiftLeft(int x, int shift) {
        while(shift > 0) {
            let shift = shift - 1;
            let x = x + x;
        }
        return x;
    }

    function int bitof(int x, int index) {
       var int i;
       let i = 1;

       while(index > 0) {
            let index = index - 1;
            let i = i + i;
       }

        let index = x & i;
        if(index = i) {
            return 1;
        } else {
            return 0;
        }
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
   function int multiply(int x, int y) {
        var int xi, yi, xb, yb, tmp1, tmp2, res;
        let xi = 0;
        let yi = 0;
        let res = 0;

        while(xi < 16) {
            let xb = Math.bitof(x, xi);

            let tmp1 = 0;
            let yi = 0;
            while(yi < 16) {
                let yb = Math.bitof(y, yi);
                let tmp2 = xb + yb;

                if(tmp2 > 1) {
                     
                     let tmp2 = Math.shiftLeft(1, yi);

                     let tmp1 = tmp1 + tmp2;
                }
                let yi = yi + 1;
            }

            let tmp1 = Math.shiftLeft(tmp1, xi);
            let res = res + tmp1;
            let xi = xi + 1;
        }
        return res;          

    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    
    function int divide(int x, int y) {
        var int flag, res;
        let flag = 0;
        if(x < 0) {
            let x = -x;
            let flag = 1;
        }
        if(y < 0) {
            let y = -y;
            let flag = 1;
        }
        let res = Math.doDiv(x, y);
        if(flag = 0) {
            return res;
        }
        return -res;
    }
    
    function int doDiv(int x, int y) {
        var int q;
        var int tmp , tmp2;
        if(y > x) {
            return 0;
        }
        
        let tmp = Math.multiply(y, 2);
        let q = Math.divide(x, tmp);

        let tmp2 =  x - (tmp * q);
        if(tmp2  < y) {
            return Math.multiply(q, 2);
        } else {
            return Math.multiply(q, 2) + 1;
        }
    }


    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int n, t, o, y;
        let n = Math.divide(x, 2);
        let o = 0;

        let y = 0;
        while(n > -1) {
            let t = Math.multiply(n, n);
            if(t = x) {
                let y = n;
                return y;
            }

            if(t > x) {
                if(o = 0) {
                    let n = Math.divide(n, 2);
                } else {
                    let y = n;
                    return y;
                }
            }

            if(t < x) {
                let n = n + 1;
                let o = 1;
            }

        }
        return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if(a>b) {
            return a;
        } else {
            return b;
        }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if(a>b) {
            return b;
        } else {
            return a;
        }
    }
}
